services:
  orchestrator:
    container_name: orchestrator
    ports:
      - 8080:8080
    build:
      context: .
      dockerfile: ./cmd/orchestrator/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  agent:
    container_name: agent
    build:
      context: .
      dockerfile: ./cmd/agent/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
  postgres:
    image: postgres
    container_name: pg-container
    environment:
      POSTGRES_PASSWORD: pass
      POSTGRES_USER: postgres
      POSTGRES_DB: go-pg
    ports:
      - 5432:5432
    healthcheck:
      test: pg_isready -U postgres
      interval: 5s
      timeout: 5s
      retries: 5
  rabbitmq:
    image: rabbitmq:3-management
    container_name: rbmq-container
    ports:
      - 15672:15672
      - 5672:5672
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 5s
      retries: 5